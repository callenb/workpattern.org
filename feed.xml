<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://workpattern.org/feed.xml" rel="self" type="application/atom+xml" /><link href="https://workpattern.org/" rel="alternate" type="text/html" /><updated>2025-01-02T17:11:46+00:00</updated><id>https://workpattern.org/feed.xml</id><title type="html">Workpattern Library</title><subtitle>A library for calculating dates and durations based on working and resting times that can all go down to the nearest minute</subtitle><author><name>Barrie Callender</name><email>barrie@callenb.org</email></author><entry><title type="html">Workpattern Rubygem CHANGELOG</title><link href="https://workpattern.org/2021/02/25/workpattern-rubygem-changelog/" rel="alternate" type="text/html" title="Workpattern Rubygem CHANGELOG" /><published>2021-02-25T22:21:13+00:00</published><updated>2021-05-04T20:12:42+01:00</updated><id>https://workpattern.org/2021/02/25/workpattern-rubygem-changelog</id><content type="html" xml:base="https://workpattern.org/2021/02/25/workpattern-rubygem-changelog/"><![CDATA[<h2 id="workpattern-v060--21-feb-2021">Workpattern v0.6.0 ( 21 Feb, 2021)</h2>

<p>I stopped keeping this Changelog file update back when v0.5.0 was realeased on 19 Oct 2016 and now it is 10Feb 2021 and I’m playing catch-up.
I have created the following set of bullet point changes by going through my commit messages, the quality of which varies greatly.<br />
A lot of the effort has been on making the code easier to read as it was a real mess.
Here is a chronological take on what I have been doing.</p>

<ul>
  <li>removed test warnings by surrounding ambiguous negatives with parenthesis</li>
  <li>I think a bug was fixed by changing #wee_total and #total to just an attr_writer</li>
  <li>removed some duplicated code</li>
  <li>replaced a number of literals with constants which I put in their own file</li>
  <li>made a lot of the code easier to read, such as extracting to a method with a sensible name or renaming existing ones</li>
  <li>Workpattern is now tested on Ruby 1.9.3, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, ruby-head, jruby-19mode &amp; jruby-head</li>
  <li>Created a Day class to remove the complexity from Week so Week deals with weeks and Day with a day</li>
  <li>My Clock class was replaced by Time or Date objects in all tests.  Clock only used for internal stuff now.</li>
  <li>Switched to sorted_set rubygem after the SortedSet class was removed from Ruby in v3.x.</li>
  <li>Workpattern now works with ruby 3.0.1dev</li>
  <li>added Contributor Covenant Code of Conduct</li>
</ul>

<h2 id="workpattern-v050--oct-19-2016">Workpattern v0.5.0 ( Oct 19, 2016)</h2>

<ul>
  <li>Workpattern now handles Timezones.  It changes the date into UTC, does the calculation and then changes it back * Barrie Callender</li>
  <li>Removed Day class and associated tests as it is no longer used * Barrie Callender</li>
  <li>Reviewed the README and removed a lot of cruft and also updated it a little to demonstrate features * Barrie Callender</li>
  <li>Hid documentation unless it was part of the public api * Barrie Callender</li>
  <li>Used Rubocop to help me be more consistent.  I ignored some of the offences to do with long lines/methods and classes * Barrie Callender</li>
  <li>Code makes use of Time objects where it use to use DateTime.  Time comes with a Timezone * Barrie Callender</li>
  <li>Rewrote/refactored methods in the Week class - which needs refactoring into new classes * Barrie Callender</li>
  <li>Removed rubyforge_project from workpattern.gemspec * Barrie Callender</li>
  <li>Added homepage &amp; required_ruby_version to workpattern.gemspec * Barrie Callender</li>
  <li>Added versions to test in Travis CI to include 1.9.3, 2.0.0, 2.1.0, 2.1.9, 2.2.0, 2.2.5, 2.3.0 &amp; 2.3.1 * Barrie Callender</li>
  <li>Dealt with Travis CI issue with version of bundler * Barrie Callender</li>
  <li>Removed config directory &amp; contents * Barrie Callender</li>
  <li>Changed Description * barrie Callender</li>
  <li>Specified minitest ~&gt; 5.4.3 due to an issue I no longer recall * Barrie Callender</li>
  <li>Hid all the documentation apart from public api * Barrie Callender</li>
  <li>improved the README.md (IMHO) * Barrie Callender</li>
</ul>

<h2 id="workpattern-v040--may-23-2014">Workpattern v0.4.0 ( May 23, 2014)</h2>

<ul>
  <li>Updated Week class to use bits and removed Day and Hour class as a consequence * Barrie Callender *</li>
  <li>This resulted in a performance improvement and some new tests</li>
</ul>

<h2 id="workpattern-v036-mar-25-2014">Workpattern v0.3.6 (Mar 25, 2014)</h2>

<ul>
  <li>total minutes of week is zero when short week starting after Sunday (#17) * Barrie Callender *</li>
  <li>Subtracting starting from top of the hour and last minute is non working (#18) * Barrie Callender *</li>
  <li>Refactorings intended to make the code easier to read and easier to change - still more to do * Barrie Callender *</li>
</ul>

<h2 id="workpattern-v035-sep-30-2013">Workpattern v0.3.5 (Sep 30, 2013)</h2>

<ul>
  <li>License missing from gemspec (#16) * Barrie Callender *</li>
  <li>Removed Gemfile.lock from git and updated .gitignore to the bundler defaults * Barrie Callender *</li>
</ul>

<h2 id="workpattern-v034-sep-27-2013">Workpattern v0.3.4 (Sep 27, 2013)</h2>

<ul>
  <li>diff doesn’t calculate properly from working to resting day (#15) * Barrie Callender *</li>
</ul>

<h2 id="workpattern-v033-sep-23-2013">Workpattern v0.3.3 (Sep 23, 2013)</h2>

<ul>
  <li>Failed to subtract 1 minute from end of resting hour (#12) * Barrie Callender *</li>
  <li>Failed to add minutes starting from a resting period in a patterned hour (#13) * Barrie Callender *</li>
  <li>Failed to subtract the exact amount of minutes from a patterned hour (#14) * Barrie Callender *</li>
  <li>The two tests no longer fail with Ruby 2.0 (#11) * Barrie Callender *</li>
</ul>

<h2 id="workpattern-v032-mar-14-2013">Workpattern v0.3.2 (Mar 14, 2013)</h2>

<ul>
  <li>Changed methods on Hour module so as to not clash with Rails (#10) * Barrie Callender *</li>
  <li>Applied DRY principle to workpattern method in Workpattern class * Barrie Callender *</li>
  <li>Removed file from emacs backup * Barrie Callender *</li>
</ul>

<h2 id="workpattern-v031-oct-14-2012">Workpattern v0.3.1 (Oct 14, 2012)</h2>

<ul>
  <li>RDOC documentation not right on rubydoc.info (#5) * Barrie Callender *</li>
</ul>

<h2 id="workpattern-v030-jul-19-2012">Workpattern v0.3.0 (Jul 19, 2012)</h2>

<ul>
  <li>incomplete tests for week (#2) * Barrie Callender *</li>
  <li>getting wrong time when hour had exactly the right number of minutes (#9) * Barrie Callender *</li>
  <li>jruby-19mode failed with SystemStackError: stack level too deep  (#8) * Barrie Callender *</li>
  <li>midnight flag should override hour and minutes  (#7) * Barrie Callender *</li>
  <li>available minutes not calculating correctly for a time of 00:01 (#6) * Barrie Callender *</li>
</ul>

<h2 id="workpattern-v020-may-31-2012">Workpattern v0.2.0 (May 31, 2012)</h2>

<ul>
  <li>Rewritten from scratch effectively first version * Barrie Callender *</li>
  <li>Please discard any version of Workpattern before this - some poor souls may have come across v0.1.0. - sorry! * Barrie Callender *</li>
</ul>]]></content><author><name>Barrie Callender</name><email>barrie@callenb.org</email></author><summary type="html"><![CDATA[The Changelog for the Workpattern Rubygem]]></summary></entry><entry><title type="html">Workpattern Rubygem Documentation</title><link href="https://workpattern.org/2021/02/21/workpattern-rubygem-documentation/" rel="alternate" type="text/html" title="Workpattern Rubygem Documentation" /><published>2021-02-21T21:45:22+00:00</published><updated>2021-05-04T20:12:42+01:00</updated><id>https://workpattern.org/2021/02/21/workpattern-rubygem-documentation</id><content type="html" xml:base="https://workpattern.org/2021/02/21/workpattern-rubygem-documentation/"><![CDATA[<h1 id="workpattern-">Workpattern <a href="https://secure.travis-ci.org/callenb/workpattern.png"><img src="https://secure.travis-ci.org/callenb/workpattern.png" alt="Build Status" /></a></h1>

<p>Calculates dates and durations whilst taking into account working and non-working times.  It creates calendars similar to what you can find in project scheduling software like Microsoft project and Primavera P6.</p>

<p>Please use <a href="http://github.com/callenb/workpattern/issues">Github Issues</a> to report bugs.  If you have a question about the library, please use the <code class="language-plaintext highlighter-rouge">workpattern</code> tag on <a href="http://stackoverflow.com/questions/tagged/workpattern">Stack Overflow</a>.  This tag is monitored by contributors.</p>

<h2 id="getting-started">Getting Started</h2>

<p>Workpattern is a library with no monkey-patching and was tested using <a href="https://travis-ci.org">Travis</a> against the following Ruby versions <code class="language-plaintext highlighter-rouge">1.9.3</code>, <code class="language-plaintext highlighter-rouge">2.1</code>, <code class="language-plaintext highlighter-rouge">2.2</code>, <code class="language-plaintext highlighter-rouge">2.3</code>, <code class="language-plaintext highlighter-rouge">2.4</code>, <code class="language-plaintext highlighter-rouge">2.5</code>, <code class="language-plaintext highlighter-rouge">2.6</code>, <code class="language-plaintext highlighter-rouge">ruby-head (3.1.0dev)</code>, <code class="language-plaintext highlighter-rouge">jruby-19mode (9.2.9.0 (2.5.7)</code> and <code class="language-plaintext highlighter-rouge">jruby-head (9.3.0.0-SNAPSHOT (2.6.5)</code>.</p>

<p>You can install it using:</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem <span class="nb">install </span>workpattern
</code></pre></div></div>

<p>Or you can add it to your Gemfile with:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem <span class="s2">"workpattern"</span>
</code></pre></div></div>

<p>Then run the bundle command to install it.</p>

<h2 id="use">Use</h2>

<h2 id="configure-and-calculate">Configure and Calculate</h2>

<p>First create a <code class="language-plaintext highlighter-rouge">Workpattern</code> to hold all the working and resting times.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mywp</span><span class="o">=</span><span class="no">Workpattern</span><span class="p">.</span><span class="nf">new</span> <span class="s1">'My Workpattern'</span><span class="p">,</span><span class="mi">2011</span><span class="p">,</span><span class="mi">10</span> 
</code></pre></div></div>
<p>That line created a <code class="language-plaintext highlighter-rouge">Workpattern</code> called <code class="language-plaintext highlighter-rouge">My Workpattern</code> starting on 1-Jan-2011 and continuing for <code class="language-plaintext highlighter-rouge">10</code> years until <code class="language-plaintext highlighter-rouge">2020</code>.</p>

<p><code class="language-plaintext highlighter-rouge">mywp</code> is created with a 24 hour a day working time.  Next step is to tell it to ignore weekends by making every Saturday and Sunday non-working.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mywp</span><span class="p">.</span><span class="nf">resting</span> <span class="ss">:days</span> <span class="o">=&gt;</span> <span class="ss">:weekend</span> 
</code></pre></div></div>

<p>The <code class="language-plaintext highlighter-rouge">Workpattern.clock</code> method can be used to specify the non-working times for each weekday.  Any class that responds to <code class="language-plaintext highlighter-rouge">#hour</code> and <code class="language-plaintext highlighter-rouge">#min</code> methods such as <code class="language-plaintext highlighter-rouge">Time</code> or <code class="language-plaintext highlighter-rouge">DateTime</code> can be used instead of <code class="language-plaintext highlighter-rouge">Workpattern.clock</code>.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mywp</span><span class="p">.</span><span class="nf">resting</span> <span class="ss">:days</span> <span class="o">=&gt;</span><span class="ss">:weekday</span><span class="p">,</span> <span class="ss">:from_time</span><span class="o">=&gt;</span><span class="no">Workpattern</span><span class="p">.</span><span class="nf">clock</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="ss">:to_time</span><span class="o">=&gt;</span><span class="no">Workpattern</span><span class="p">.</span><span class="nf">clock</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">59</span><span class="p">)</span> 
<span class="n">mywp</span><span class="p">.</span><span class="nf">resting</span> <span class="ss">:days</span> <span class="o">=&gt;</span><span class="ss">:weekday</span><span class="p">,</span> <span class="ss">:from_time</span><span class="o">=&gt;</span><span class="no">Workpattern</span><span class="p">.</span><span class="nf">clock</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="ss">:to_time</span><span class="o">=&gt;</span><span class="no">Workpattern</span><span class="p">.</span><span class="nf">clock</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">59</span><span class="p">)</span> 
<span class="n">mywp</span><span class="p">.</span><span class="nf">resting</span> <span class="ss">:days</span> <span class="o">=&gt;</span><span class="ss">:weekday</span><span class="p">,</span> <span class="ss">:from_time</span><span class="o">=&gt;</span><span class="no">Workpattern</span><span class="p">.</span><span class="nf">clock</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="ss">:to_time</span><span class="o">=&gt;</span><span class="no">Workpattern</span><span class="p">.</span><span class="nf">clock</span><span class="p">(</span><span class="mi">23</span><span class="p">,</span><span class="mi">59</span><span class="p">)</span> 
</code></pre></div></div>
<p>As well as <code class="language-plaintext highlighter-rouge">:weekend</code> and <code class="language-plaintext highlighter-rouge">:weekday</code> it is possible to use <code class="language-plaintext highlighter-rouge">:mon</code>, <code class="language-plaintext highlighter-rouge">:tue</code>, <code class="language-plaintext highlighter-rouge">:wed</code>, <code class="language-plaintext highlighter-rouge">:thu</code>, <code class="language-plaintext highlighter-rouge">:fri</code>, <code class="language-plaintext highlighter-rouge">:sat</code>, <code class="language-plaintext highlighter-rouge">:sun</code> or <code class="language-plaintext highlighter-rouge">all</code>.</p>

<p>With <code class="language-plaintext highlighter-rouge">mywp</code> setup, the <code class="language-plaintext highlighter-rouge">#calc</code> method is used to add 32 hours which must be supplied as the number of whole minutes (1920) to a date.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">my_date</span><span class="o">=</span><span class="no">Time</span><span class="p">.</span><span class="nf">gm</span> <span class="mi">2011</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">0</span> 
<span class="n">result_date</span> <span class="o">=</span> <span class="n">mywp</span><span class="p">.</span><span class="nf">calc</span> <span class="n">my_date</span><span class="p">,</span><span class="mi">1920</span>  <span class="c1"># =&gt; 6/9/11@18:00</span>
</code></pre></div></div>

<p>The result takes into account the non-working or resting times.</p>

<p>Subtracting a date is just as easy by using a negative number of minutes in <code class="language-plaintext highlighter-rouge">#calc</code>.</p>

<p>Finding the duration between two dates is also easy using the <code class="language-plaintext highlighter-rouge">#diff</code> method.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">diff_result</span> <span class="o">=</span> <span class="n">mywp</span><span class="p">.</span><span class="nf">diff</span> <span class="n">my_date</span><span class="p">,</span> <span class="n">result_date</span>  <span class="c1"># =&gt; 1920</span>
</code></pre></div></div>

<p>Vacations can be added to the <code class="language-plaintext highlighter-rouge">Workpattern</code> using the <code class="language-plaintext highlighter-rouge">#resting</code> method:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mywp</span><span class="p">.</span><span class="nf">resting</span> <span class="ss">:days</span> <span class="o">=&gt;</span> <span class="ss">:all</span><span class="p">,</span> <span class="ss">:start</span> <span class="o">=&gt;</span> <span class="no">DateTime</span><span class="p">.</span><span class="nf">civil</span><span class="p">(</span><span class="mi">2011</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span> <span class="ss">:finish</span> <span class="o">=&gt;</span> <span class="no">DateTime</span><span class="p">.</span><span class="nf">civil</span><span class="p">(</span><span class="mi">2011</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span>
</code></pre></div></div>
<p>Find out if a specific date and time is working or not.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mydate</span> <span class="o">=</span> <span class="no">DateTime</span><span class="p">.</span><span class="nf">civil</span> <span class="mi">2011</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span>
<span class="n">mywp</span><span class="p">.</span><span class="nf">resting?</span> <span class="n">mydate</span>  <span class="c1"># =&gt; true</span>
<span class="n">mywp</span><span class="p">.</span><span class="nf">working?</span> <span class="n">mydate</span>  <span class="c1"># =&gt; false</span>
</code></pre></div></div>

<h3 id="manage">Manage</h3>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Fetch a specific Workpattern</span>
<span class="no">Workpattern</span><span class="p">.</span><span class="nf">get</span> <span class="s2">"My Workpattern"</span>

<span class="c1"># Delete a specific Workpattern</span>
<span class="no">Workpattern</span><span class="p">.</span><span class="nf">delete</span> <span class="s2">"My Workpattern"</span>

<span class="c1"># Delete all Workpatterns</span>
<span class="no">Workpattern</span><span class="p">.</span><span class="nf">clear</span>
</code></pre></div></div>

<h2 id="license">License</h2>

<p>(The MIT License)</p>

<p>Copyright (c) 2012 - 2021</p>

<p>Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
‘Software’), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:</p>

<p>The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.</p>

<p>THE SOFTWARE IS PROVIDED ‘AS IS’, WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>]]></content><author><name>Barrie Callender</name><email>barrie@callenb.org</email></author><summary type="html"><![CDATA[Documentation for the Workpattern Rubygem which calculates dates and durations based on customised working and resting patterns]]></summary></entry></feed>